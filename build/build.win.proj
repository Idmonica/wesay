<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<RootDir Condition="'$(teamcity_build_checkoutDir)' == '' And '$(RootDir)'==''">$(MSBuildProjectDirectory)/..</RootDir>
		<RootDir Condition="'$(teamcity_build_checkoutDir)' != ''">$(teamcity_build_checkoutDir)</RootDir>
	</PropertyGroup>

	<Import Project="$(RootDir)/build/build.common.proj" />
	<Import Project="$(RootDir)/build/NuGet.targets"/>

	<UsingTask TaskName="StampAssemblies" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="MakeWixForDirTree" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="Split" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="FileUpdate" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="MakePot" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="DNZip" AssemblyFile="$(RootDir)/src/packages/MSBuild.Extension.Pack.1.9.0/tools/net40/MSBuild.ExtensionPack.dll" />
	<UsingTask TaskName="File" AssemblyFile="$(RootDir)/src/packages/MSBuild.Extension.Pack.1.9.0/tools/net40/MSBuild.ExtensionPack.dll" />
	<!-- <UsingTask TaskName="MsBuild.Community.Tasks.WebDownload" AssemblyFile="$(RootDir)/src/packages/MSBuildTasks.1.5.0.235/tools/MSBuild.Community.Tasks.dll" /> -->

	<PropertyGroup>
		<Solution>WeSay VS2010.sln</Solution>
		<SolutionPath>$(RootDir)/src/$(Solution)</SolutionPath>
		<ApplicationName>WeSay</ApplicationName>
		<!-- NB: the folder name may be set to lower case, so we have to define it again for rsync  -->
		<ApplicationServerFolderName>wesay</ApplicationServerFolderName>
		<Configuration>Release</Configuration>
	</PropertyGroup>

	<PropertyGroup>
		<OutputDir>$(RootDir)/output/$(Configuration)</OutputDir>
	</PropertyGroup>

	<ItemGroup>
		<CSharpFiles
			Include="$(RootDir)\**\*.cs"
			Exclude="$(RootDir)\**\*Tests\**;$(RootDir)\**\WeSay.ConfigTool\**" />
		<XmlFiles Include="$(RootDir)\common\**\*.WeSayConfig"/>
	</ItemGroup>

	<Target Name="Build">
		<CallTarget Targets="Clean"/>
		<CallTarget Targets="CopyHelpFilesIntoSourceTree" />
		<CallTarget Targets="SetAssemblyVersion"/>
		<CallTarget Targets="Compile"/>
		<Message Text="Build Complete"/>
	</Target>

	<Target Name="CopyHelpFilesIntoSourceTree">
		<Copy
			SourceFiles ="$(RootDir)\External\wesay.helpmap"
			DestinationFolder ="$(RootDir)\src\WeSay.Project\Resources" />
		<Copy
			SourceFiles ="$(RootDir)\External\WeSay_Helps.chm"
			DestinationFolder ="$(RootDir)" />
	</Target>

	<ItemGroup>
		<ExistingObjectFiles
			Include="$(RootDir)/**/obj/**/*;$(RootDir)/output/$(Configuration)/**/*"
			Exclude="$(RootDir)/.hg/**/*"
		/>
	</ItemGroup>

	<Target Name="Clean">
		<Delete Files="@(ExistingObjectFiles)" />
		<CallTarget Targets="CleanInstaller" />
	</Target>

	<ItemGroup>
		<ExistingInstallerFiles
			Include="$(RootDir)/output/installer/**/*"
			Exclude="$(RootDir)/.hg/**/*"
		/>
	</ItemGroup>

	<Target Name="CleanInstaller">
		<Delete Files="@(ExistingInstallerFiles)" />
	</Target>

	<Target Name="CopyGeckofxFiles">
		<Message Text="CopyGeckofxFiles"/>
		<Error Condition="'$(GeckoDir)' == ''"
			Text="Unable to locate Gecko directory" />
		<ItemGroup>
			<GeckofxFiles Include="$(GeckoDir)/lib/net45/*.dll" />
			<GeckofxFiles Include="$(GeckoDir)/lib/net45/*.pdb" />
			<FirefoxFiles Include="$(GeckoDir)/content/Firefox/*.*" />
		</ItemGroup>
		<Copy SourceFiles="@(GeckofxFiles)" DestinationFolder="$(OutputDir)" />
		<Copy SourceFiles="@(FirefoxFiles)" DestinationFolder="$(OutputDir)/Firefox" />
	</Target>

	<Target Name="Compile" DependsOnTargets="RestorePackages;UnzipMercurial;CopyGeckofxFiles">
		<MSBuild
			Projects="$(RootDir)\src\$(Solution)"
			Targets="Build"
			Properties="Configuration=$(Configuration)" />
		<CallTarget Condition="'$(action)' == 'test'" Targets="RunTests"/>
	</Target>


	<!-- Installer Targets -->
	<ItemGroup>
		<SampleFiles
			Include="$(RootDir)\SampleProjects\src\**\*.*"
			Exclude="" />
	</ItemGroup>

	<ItemGroup>
		<SampleProjects
			Include="$(RootDir)\SampleProjects\src\*.*"
			Exclude="" />
	</ItemGroup>

	<Target Name="CreateSample">
		<Copy
			SourceFiles="@(SampleFiles)"
			DestinationFolder="$(RootDir)\SampleProjects\%(RecursiveDir)" />
	</Target>

	<Target Name="MakePotFile">
		<MakePot
			ProjectId="WeSay"
			OutputFile="$(RootDir)\common\WeSay.pot"
			MsdIdBugsTo="issues@wesay.org"
			XmlFiles="@(XmlFiles)"
			XPathToStrings="//label | //longLabel | //description[not(@UseInConstructor='false')]"
			CSharpFiles="@(CSharpFiles)" />
	</Target>

	<Target Name="MakeWixForPoFiles">
		<MakeWixForDirTree
			DirectoryReferenceId="common"
			ComponentGroupId="PoFiles"
			RootDirectory="$(RootDir)\common"
			OutputFilePath="$(RootDir)\src\Installer\GeneratedPOFiles.wxs"
			MatchRegExPattern="\.po$">
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
	</Target>

	<Target Name="MakeWixForTemplates">
		<MakeWixForDirTree
			DirectoryReferenceId="TemplatesDir"
			ComponentGroupId="templates"
			RootDirectory="$(RootDir)\templates"
			OutputFilePath="$(RootDir)\src\Installer\GeneratedTemplateFiles.wxs"
			MatchRegExPattern=".*" >
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
	</Target>

	<Target Name="MakeWixForXulrunner">
		<MakeWixForDirTree
			DirectoryReferenceId="XulrunnerFiles"
			ComponentGroupId="xulrunner"
			RootDirectory="$(OutputDir)\Firefox"
			OutputFilePath="$(RootDir)\src\Installer\GeneratedXulrunnerFiles.wxs"
			MatchRegExPattern=".*" >
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
	</Target>

	<Target Name="MakeWixForDistFiles">
		<CallTarget targets="MakeWixForPoFiles"/>
		<CallTarget targets="MakeWixForTemplates"/>
		<CallTarget targets="MakeWixForXulrunner"/>
	</Target>

	<Target Name="Installer" DependsOnTargets="Clean; VersionNumbers; MakeWixForDistFiles; Build ">
		<!-- set the version number in the installer configuration program.  Perhaps there's a way to just send in the variables rather than this brute-force
		changing of the script, but I haven't figured that out. -->

		<FileUpdate
			File="$(RootDir)\src\Installer\Installer.wxs"
			Regex='Property_ProductVersion = ".*"'
			ReplacementText ="Property_ProductVersion = &quot;$(Version)&quot;" />
		<Message Text="Making WeSay Installer Version: $(Version)" Importance="high"  />

		<MSBuild Projects="$(RootDir)\src\Installer\Installer.wixproj"/>

		<File
			TaskAction="Move"
			Path="$(RootDir)\output\installer\WeSayInstaller.msi"
			TargetPath="$(RootDir)\output\installer\WeSayInstaller.$(version)$(ReleaseString).msi" />
	</Target>

	<!-- Upload -->
	<Target Name="MakeDownloadPointers" DependsOnTargets="VersionNumbers">
		<PropertyGroup>
			<DownloadInfoPath>../output/installer/$(ApplicationName)Installer.$(Version)$(ReleaseString).download_info</DownloadInfoPath>
		</PropertyGroup>
		<!-- For use on software.sil.org download page -->
		<Copy SourceFiles ="$(teamcity_build_checkoutDir)\src\Installer\template.download_info"        DestinationFiles ="$(DownloadInfoPath)"/>
		<FileUpdate File="$(DownloadInfoPath)" DatePlaceHolder='_DATE_' DateFormat='yyyy-MM-dd' Regex='_VERSION_'        ReplacementText ="$(Version)" />
		<!--<FileUpdate File="$(DownloadInfoPath)" Regex='_BUILD_'        ReplacementText ="$(BUILD_NUMBER)" />-->
		<FileUpdate File="$(DownloadInfoPath)" Regex='_STABILITY_'        ReplacementText ="$(ReleaseString)" />
		<!-- Channels: alpha, beta, rc, stable -->
		<FileUpdate File="$(DownloadInfoPath)" Regex='_CHANNEL_'        ReplacementText ="rc" />
	</Target>

	<Target Name="Sign" DependsOnTargets="Installer" >
		<Message Text="Attempting to sign WeSayInstaller.$(Version)$(ReleaseString).msi" Importance="high"/>
		<Exec Command='sign /d "WeSay $(Version) Installer" /du "http://software.sil.org/wesay/download/" "$(RootDir)\output\installer\WeSayInstaller.$(version)$(ReleaseString).msi"' />
	</Target>

	<Target Name="Upload" DependsOnTargets="VersionNumbers">
		<Error Condition="!Exists('../output/installer/WeSayInstaller.$(version)$(ReleaseString).msi')" Text="Installer ../output/installer/WeSayInstaller.$(version)$(ReleaseString).msi not found to publish."/>
		<CallTarget Targets = 'UploadSSO' />
	</Target>

	<Target Name="UploadSSO" DependsOnTargets="VersionNumbers" Condition="Exists('../output/installer/WeSayInstaller.$(version)$(ReleaseString).msi')">
		<Message Text="Attempting rsync of WeSayInstaller.$(Version)$(ReleaseString).msi to software.sil.org" Importance="high"/>
		<Exec Command ='"c:\program files\cwRsync\bin\rsync.exe" -vzlt --chmod=Dug=rwx,Fu=rw,go=r --stats --rsync-path="sudo -u vu2004 rsync" -e"\"c:\program files\cwRsync\bin\ssh\" -oUserKnownHostsFile=C:\BuildAgent\conf\known_hosts -oIdentityFile=/cygdrive/c/BuildAgent/conf/bob.key -l root"  "../output/installer/WeSayInstaller.$(version)$(ReleaseString).msi" root@software.sil.org:/var/www/virtual/software.sil.org/htdocs/downloads/r/$(ApplicationServerFolderName)/' />
		<CallTarget Targets ='MakeDownloadPointers'/>

		<!--  push downloadinfo up to software.sil.org download page -->
		<Message Text="Attempting rsync of $(DownloadInfoPath) to software.sil.org" Importance="high"/>
		<Exec Command ='"c:\program files\cwRsync\bin\rsync.exe" -vzlt --chmod=Dug=rwx,Fu=rw,go=r --stats --rsync-path="sudo -u vu2004 rsync" -e"\"c:\program files\cwRsync\bin\ssh\" -oUserKnownHostsFile=C:\BuildAgent\conf\known_hosts -oIdentityFile=/cygdrive/c/BuildAgent/conf/bob.key -l root"  "../output/installer/WeSayInstaller.$(Version)$(ReleaseString).download_info" root@software.sil.org:/var/www/virtual/software.sil.org/htdocs/downloads/r/$(ApplicationServerFolderName)/' />
		<Message Text="Upload complete" Importance="high" />
	</Target>

	<Target Name="UploadBuild" DependsOnTargets="Sign; Upload" >
	</Target>

</Project>
