<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
	Microsoft ResX Schema

	Version 2.0

	The primary goals of this format is to allow a simple XML format
	that is mostly human readable. The generation and parsing of the
	various data types are done through the TypeConverter classes
	associated with the data types.

	Example:

	... ado.net/XML headers & schema ...
	<resheader name="resmimetype">text/microsoft-resx</resheader>
	<resheader name="version">2.0</resheader>
	<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
	<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
	<data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
	<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
	<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
		<value>[base64 mime encoded serialized .NET Framework object]</value>
	</data>
	<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
		<comment>This is a comment</comment>
	</data>

	There are any number of "resheader" rows that contain simple
	name/value pairs.

	Each data row contains a name, and value. The row also contains a
	type or mimetype. Type corresponds to a .NET class that support
	text/value conversion through the TypeConverter architecture.
	Classes that don't support this are serialized and stored with the
	mimetype set.

	The mimetype is used for serialized objects, and tells the
	ResXResourceReader how to depersist the object. This is currently not
	extensible. For a given mimetype the value must be set accordingly:

	Note - application/x-microsoft.net.object.binary.base64 is the format
	that the ResXResourceWriter will generate, however the reader can
	read any of the formats listed below.

	mimetype: application/x-microsoft.net.object.binary.base64
	value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.soap.base64
	value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.bytearray.base64
	value   : The object must be serialized into a byte array
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
	<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
	<xsd:element name="root" msdata:IsDataSet="true">
	  <xsd:complexType>
		<xsd:choice maxOccurs="unbounded">
		  <xsd:element name="metadata">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" />
			  </xsd:sequence>
			  <xsd:attribute name="name" use="required" type="xsd:string" />
			  <xsd:attribute name="type" type="xsd:string" />
			  <xsd:attribute name="mimetype" type="xsd:string" />
			  <xsd:attribute ref="xml:space" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="assembly">
			<xsd:complexType>
			  <xsd:attribute name="alias" type="xsd:string" />
			  <xsd:attribute name="name" type="xsd:string" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="data">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
				<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
			  </xsd:sequence>
			  <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
			  <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
			  <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
			  <xsd:attribute ref="xml:space" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="resheader">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
			  </xsd:sequence>
			  <xsd:attribute name="name" type="xsd:string" use="required" />
			</xsd:complexType>
		  </xsd:element>
		</xsd:choice>
	  </xsd:complexType>
	</xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
	<value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
	<value>2.0</value>
  </resheader>
  <resheader name="reader">
	<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
	<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
	<value>
		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
		Bb4HyGuiA9O8zGsAAAAASUVORK5CYII=
</value>
  </data>
</root>