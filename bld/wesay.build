<project name="WeSay Build" default="build">
	<property name="configuration" value="debug"/>
	<property name="nant.settings.currentframework" value="net-2.0" />

	<target name="clean" description="Delete all previously compiled binaries.">
		<delete>
			<fileset>
				<include name="../**/bin/**" />
				<include name="../**/obj/**" />
				<include name="../output/**" />
				<include name="../release/output/*" />
			</fileset>
		</delete>
	</target>

	<target name="revision">
		<property name="svn.info.log" value="svninfo.txt"/>
		<exec
			program="svn.exe"
			basedir="C:\Program Files\Subversion\bin"
			commandline="info http://code.wesay.org/WeSay/trunk"
			output="${svn.info.log}"
		/>
		<loadfile property="svn.head.revision" file="${svn.info.log}" />
		<regex pattern="^Revision: (?'revision'.*)$" input="${svn.head.revision}" options="Multiline" />
		<property name="revision" value="${string::trim(revision)}" />
		<echo message="Revision: ${revision}" />
		<delete file="${svn.info.log}" />
	</target>

	<target name="version" depends="revision">
		<loadfile property="version" file="version.txt">
			<filterchain>
				<expandproperties />
			</filterchain>
		</loadfile>
		<property name="version" value="${string::trim(version)}" />
		<echo message="Version: ${version}" />
	</target>

	<target name="assemblyinfo" depends="version">
		<foreach item="File" property="filename">
			<in>
				<items>
					<include name="../**/AssemblyInfo.cs" />
				</items>
			</in>
			<do>
				<script language="C#">
				<code><![CDATA[
				public static void ScriptMain(Project project)
				{
					StreamReader reader = new StreamReader(project.Properties["filename"]);
					string contents = reader.ReadToEnd();
					reader.Close();
					string replacement;
					string newText = contents;
					replacement = string.Format(
						"[assembly: AssemblyVersion(\"{0}\")]",
						project.Properties["version"]
					);
					newText = Regex.Replace(newText, @"\[assembly: AssemblyVersion\("".*""\)\]", replacement);
					replacement = string.Format(
						"[assembly: AssemblyFileVersion(\"{0}\")]",
						project.Properties["version"]
					);
					newText = Regex.Replace(newText, @"\[assembly: AssemblyFileVersion\("".*""\)\]", replacement);
					StreamWriter writer = new StreamWriter(project.Properties["filename"], false);
					writer.Write(newText);
					writer.Close();
				}
				]]>
				</code>
				</script>
			</do>
		</foreach>
	</target>

	<target name="build" description="Build all targets.">
		<call target="build.solution"/>
	</target>

	<target name="rebuild" depends="clean, build" />

	<target name="build.solution" depends="assemblyinfo">
		<call target="build.only"/>
	</target>

	<target name="build.only">
		<solution configuration="${configuration}" solutionfile="../src/wesay.sln">
		</solution>
		<property name="expected.output" value="../output/${configuration}/WeSay.App.exe"/>
		<fail unless="${file::exists(expected.output)}">Output file doesn't exist in ${expected.output}</fail>
	</target>

	<target name="test" depends="build.solution">
		<call target="test.only"/>
	</target>

	<target name="test.only" depends="build.only">
		<nunit2>
			<formatter type="Plain" usefile="true" />
			<test>
		  <assemblies>
			<include name="../output/${configuration}/*.Test*.dll" />
		  </assemblies>
		  <categories>
		  </categories>
			</test>
		</nunit2>
	</target>

	<!--
	<target name="publish" depends="installer">
		<exec program="ftp.exe">
			<arg line="-n -s:ftp.txt" />
		</exec>
	</target>
	-->

</project>
