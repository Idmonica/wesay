<?xml version="1.0" encoding="utf-8"?>

<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
	<BaseDirectory>$(MSBuildProjectDirectory)\..</BaseDirectory>
  </PropertyGroup>

  <PropertyGroup>
	<SourceFolder>$(BaseDirectory)\src</SourceFolder>
	<CSharpFiles>$(BaseDirectory)\src</CSharpFiles>
  </PropertyGroup>


  <ItemGroup>
	<CSharpFiles Include="$(BaseDirectory)\**\*.cs"/>
	<XmlFiles Include="$(BaseDirectory)\common\**\*.WeSayConfig"/>
  </ItemGroup>

  <Import Project="$(BaseDirectory)\bld\UpdateCsProjs.Targets"/>
  <Import Project="$(BaseDirectory)\bld\Version.Targets"/>


  <Target Name="Compile">
	<MSBuild Projects="$(BaseDirectory)\src\WeSay.sln"
			 Targets="Rebuild"
			 Properties="Configuration=Debug" />

	<MSBuild Projects="$(BaseDirectory)\src\WeSay.sln"
			 Targets="Rebuild"
			 Properties="Configuration=Release" />
  </Target>

  <Target Name="Test">
	<!-- collect up the test dlls that were generated in the Compile step
	into the xTestAssemblies property-->
	<CreateItem Include="$(BaseDirectory)\output\Debug\*.tests.dll">
	  <Output TaskParameter="Include" ItemName="DebugTestAssemblies"/>
	</CreateItem>
	<CreateItem Include="$(BaseDirectory)\output\Release\*.tests.dll">
	  <Output TaskParameter="Include" ItemName="ReleaseTestAssemblies"/>
	</CreateItem>

	<MakeDir Directories="$(BaseDirectory)\output\TestResults\Debug\;
						  $(BaseDirectory)\output\TestResults\Release\"/>


	<!-- run the tests individually -->
	<!-- without path to Tool-->
	<NUnit OutputXmlFile="$(BaseDirectory)\output\TestResults\Debug\%(DebugTestAssemblies.Filename).xml"
		   Assemblies="%(DebugTestAssemblies.FullPath)"
		   WorkingDirectory="$(BaseDirectory)\output\Debug" Condition="$(NUnitPath)==''">
	</NUnit>
	<NUnit OutputXmlFile="$(BaseDirectory)\output\TestResults\Release\%(ReleaseTestAssemblies.Filename).xml"
		   Assemblies="%(ReleaseTestAssemblies.FullPath)"
		   WorkingDirectory="$(BaseDirectory)\output\Release" Condition="$(NUnitPath)==''">
	</NUnit>

	<!-- with explicit path to Tool-->
	<NUnit OutputXmlFile="$(BaseDirectory)\output\TestResults\Debug\%(DebugTestAssemblies.Filename).xml"
		   Assemblies="%(DebugTestAssemblies.FullPath)"
		   WorkingDirectory="$(BaseDirectory)\output\Debug"
		   ToolPath="$(NUnitPath)" Condition="$(NUnitPath)!=''">
	</NUnit>
	<NUnit OutputXmlFile="$(BaseDirectory)\output\TestResults\Release\%(ReleaseTestAssemblies.Filename).xml"
		   Assemblies="%(ReleaseTestAssemblies.FullPath)"
		   WorkingDirectory="$(BaseDirectory)\output\Release"
		   ToolPath="$(NUnitPath)" Condition="$(NUnitPath)!= ''">
	</NUnit>

  </Target>


  <ItemGroup>
	<SampleFiles Include="$(BaseDirectory)\SampleProjects\src\**\*.*"
				 Exclude="$(BaseDirectory)\SampleProjects\src\**\.svn\*.*"/>
  </ItemGroup>


  <ItemGroup>
	<SampleProjects Include="$(BaseDirectory)\SampleProjects\src\*.*"
					Exclude="$(BaseDirectory)\SampleProjects\src\.svn"/>
  </ItemGroup>

  <Target Name="CreateSample">
	<Copy SourceFiles="@(SampleFiles)"
		  DestinationFolder="$(BaseDirectory)\SampleProjects\%(RecursiveDir)" />

	<CreateItem Include="$(BaseDirectory)\SampleProjects\**\*.lift"
				Exclude="$(BaseDirectory)\SampleProjects\src\**\*.*">
	  <Output TaskParameter="Include" ItemName="LiftFiles"/>
	</CreateItem>

	<!-- lift to wesay.words-->
	<Exec Command='"$(BaseDirectory)\output\Release\SampleDataProcessor.exe" "%(LiftFiles.FullPath)"'
		  WorkingDirectory="$(BaseDirectory)\output\Release"/>

  </Target>


  <Target Name="LauchWeSayWithSample">
	<!-- formerly VerifySample -->
	<CreateItem Include="$(BaseDirectory)\SampleProjects\**\*.lift"
				Exclude="$(BaseDirectory)\SampleProjects\src\**\*.*;
				$(BaseDirectory)\SampleProjects\PRETEND\**\*.*">
	  <Output TaskParameter="Include" ItemName="WeSayFiles"/>
	</CreateItem>

	<!-- open using wesay -->
	<Exec Command='"$(BaseDirectory)\output\Release\WeSay.App.exe" "%(WeSayFiles.FullPath)"'
		  WorkingDirectory="$(BaseDirectory)\output\Release"/>
  </Target>


  <UsingTask AssemblyFile="$(BaseDirectory)\bld\Palaso.BuildTasks.dll" TaskName="MakePot" />
  <Target Name="MakePotFile">
	<MakePot ProjectId="WeSay"
			 OutputFile="$(BaseDirectory)\common\WeSay.pot"
			 MsdIdBugsTo="hattonjohn@gmail.com"
			 XmlFiles="@(XmlFiles)"
			 XPathToStrings="//label | //description[not(@UseInConstructor='false')]"
			 CSharpFiles="@(CSharpFiles)">
	</MakePot>
  </Target>

  <UsingTask AssemblyFile="$(BaseDirectory)\bld\Palaso.BuildTasks.dll" TaskName="MakeWixForDirTree" />

  <Target Name="MakeWixForPoFiles">
	<MakeWixForDirTree
				DirectoryReferenceId="common"
				ComponentGroupId="PoFiles"
				RootDirectory="$(BaseDirectory)\common"
				OutputFilePath="$(BaseDirectory)\src\Setup\GeneratedPOFiles.wxs"
				MatchRegExPattern="\.po$">
	  <Output TaskParameter="OutputFilePath" ItemName="Compile" />
	</MakeWixForDirTree>
  </Target>


  <Target Name="MakeWixForBiatah">
	<MakeWixForDirTree
				DirectoryReferenceId="biatahCacheDir"
				ComponentGroupId="biatahCache"
				RootDirectory="$(BaseDirectory)\SampleProjects\Biatah\Cache"
				OutputFilePath="$(BaseDirectory)\src\Setup\GeneratedBiatahCache.wxs"
				MatchRegExPattern=".*">
	  <Output TaskParameter="OutputFilePath" ItemName="Compile" />
	</MakeWixForDirTree>
  </Target>


  <Target Name="MakeWixForTemplates">
	<MakeWixForDirTree
				DirectoryReferenceId="templatesDir"
				ComponentGroupId="templates"
				RootDirectory="$(BaseDirectory)\templates"
				OutputFilePath="$(BaseDirectory)\src\Setup\GeneratedTemplates.wxs"
				MatchRegExPattern=".*">
	  <Output TaskParameter="OutputFilePath" ItemName="Compile" />
	</MakeWixForDirTree>
  </Target>

  <Target Name="Package">

	<CallTarget targets="MakePotFile; MakeWixForPoFiles"/>
	<CallTarget targets="MakeWixForBiatah"/>
	<CallTarget targets="MakeWixForTemplates"/>

	<SvnVersion LocalPath="$(BaseDirectory)">
	  <Output TaskParameter="Revision" PropertyName="Revision" />
	</SvnVersion>
	<CreateProperty Value="$(Major).$(Minor).$(Revision)"><!--the preceding zero here is so we get a valid version even when just running this target in isolation, when Revision is empty -->
	  <Output PropertyName="Version" TaskParameter="Value"/>
	</CreateProperty>

	<!-- set the version number in the installer configuration program.  I'm sure there's a way to just send in the variables rather than this brute-force
		changing of the script, but I haven't figured that out. -->
	<FileUpdate Files="$(BaseDirectory)\src\Setup\Setup.wxs" Regex="Property_ProductVersion = \&quot;.*\&quot;"
			  ReplacementText ="Property_ProductVersion = &quot;$(Version)&quot;" />


	<Message Text="Making Installer Version: $(Version)"/>

	<MSBuild Projects="$(BaseDirectory)\src\Setup\Setup.wixproj"/>

	<!-- remove an existing one with the same name, if necessary -->
	<Delete Files="$(BaseDirectory)\output\installer\SetupWeSay.$(Version).msi" TreatErrorsAsWarnings="false" />

	<Move SourceFiles="$(BaseDirectory)\output\installer\SetupWeSay.msi"
		  DestinationFiles="$(BaseDirectory)\output\installer\SetupWeSay.$(Version).msi"/>
  </Target>


  <Target Name="Upload">
	<SvnVersion LocalPath="$(BaseDirectory)">
	  <Output TaskParameter="Revision" PropertyName="Revision" />
	</SvnVersion>

	<CreateProperty Value="$(Major).$(Minor).$(Revision).$(Bug)">
	  <Output PropertyName="Version" TaskParameter="Value"/>
	</CreateProperty>

	<Message Text="Uploading Version: $(Version)"/>

	<Exec Command='pscp.exe -batch -pw $(password) "$(BaseDirectory)\output\installer\SetupWeSay.$(Version).msi" $(user)@wesay.org:/var/www/downloads'
		   WorkingDirectory="c:\program files\PuTTY\" />
  </Target>

  <Target Name="Mail">
	<SvnVersion LocalPath="$(BaseDirectory)">
	  <Output TaskParameter="Revision" PropertyName="Revision" />
	</SvnVersion>

	<CreateProperty Value="$(Major).$(Minor).$(Revision).$(Bug)">
	  <Output PropertyName="Version" TaskParameter="Value"/>
	</CreateProperty>

	<!-- Mail email to list-->
	<Mail Body="WeSay version $(Version) has been deployed. Check it out."
		  SmtpServer="wesay.org"
		  Username="$(user)"
		  Password="$(password)"
		  From="$(user)@wesay.org"
		  Subject="New version of WeSay ($(Version))"
		  To="wesay@googlegroups.com"/>
  </Target>

  <Target Name="Build">
	<CallTarget Targets="UpdateCsProjs;
						 Compile;
						 Test;
						 CreateSample;
						 Package;
						 Upload"/>
	<Message Text="Build Complete"/>
  </Target>

  <Target Name="Clean">
	<MSBuild Projects="$(BaseDirectory)\src\WeSay.sln"
			 Targets="Clean"
			 Properties="Configuration=Debug" />
	<MSBuild Projects="$(BaseDirectory)\src\WeSay.sln"
			 Targets="Clean"
			 Properties="Configuration=Release" />
  </Target>

</Project>
